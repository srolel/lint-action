name: Test

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      # Go

      # - name: Set up Go
      #   uses: actions/setup-go@v1
      #   with:
      #     go-version: 1.13

      # # TODO: Remove step once actions/setup-go adds $GOPATH/bin to $PATH by default
      # # See https://github.com/actions/setup-go/issues/14
      # - name: Add Go to $PATH
      #   run: |
      #     echo "::set-env name=GOPATH::$(go env GOPATH)"
      #     echo "::add-path::$(go env GOPATH)/bin"

      # - name: Install Go dependencies
      #   run: |
      #     cd ./test/linters/projects/golint
      #     go get -u golang.org/x/lint/golint

      # # Node.js

      # - name: Set up Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 12

      # - name: Install Node.js dependencies
      #   run: |
      #     cd ./test/linters/projects/eslint/
      #     yarn install
      #     cd ../eslint-typescript/
      #     yarn install
      #     cd ../prettier/
      #     yarn install
      #     cd ../stylelint/
      #     yarn install
      #     cd ../xo/
      #     yarn install

      # # Python

      # - name: Set up Python
      #   uses: actions/setup-python@v1
      #   with:
      #     python-version: 3.8

      # - name: Install Python dependencies
      #   run: |
      #     cd ./test/linters/projects/
      #     pip install -r ./black/requirements.txt -r ./flake8/requirements.txt -r ./mypy/requirements.txt

      # # Ruby

      # - name: Set up Ruby
      #   uses: actions/setup-ruby@v1
      #   with:
      #     ruby-version: 2.6

      # - name: Install Ruby dependencies
      #   run: |
      #     gem install bundler
      #     cd ./test/linters/projects/rubocop/
      #     bundle install

      # Swift (only on Linux)

      # - name: Install Swift dependencies (Linux)
      #   if: startsWith(matrix.os, 'ubuntu')
      #   run: |
      #     git clone --branch 0.50200.0 --depth 1 git://github.com/apple/swift-format
      #     cd swift-format
      #     swift build -c release
      #     echo "::add-path::${PWD}/.build/release"

      # # Swift (only on macOS)

      # - name: Install Swift dependencies (macOS)
      #   if: startsWith(matrix.os, 'macos')
      #   run: |
      #     brew update
      #     brew install mint
      #     cd ./test/linters/projects/swift-format-lockwood/
      #     mint bootstrap --link
      #     cd ../swiftlint/
      #     mint bootstrap --link

      # Arcanist

      - name: Install Arcanist dependencies
        run: |
          cd ./test/linters/projects/arclint/
          git clone https://github.com/phacility/libphutil.git
          git clone https://github.com/phacility/arcanist.git

      - name: Add arc to path
        run: |
          echo "::add-path::./test/linters/projects/arclint/arcanist/bin"

      # Tests

      - name: Run tests
        run: |
          yarn
          yarn test
